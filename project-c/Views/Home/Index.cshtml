@using project_c.Models.Plants
@model project_c.Helpers.PaginatedResponse<Plant>

@{
    ViewData["Title"] = "Home Page";
    ViewData["ContainerClass"] = true;
}
<div class="home-banner">
    <div class="container mx-auto pt-6">
        <div class="max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:py-16 lg:px-8 lg:flex lg:items-center lg:justify-between">
            <h2 class="text-3xl font-extrabold tracking-tight text-white sm:text-4xl">
                <span class="block">Stekjes ruilen?</span>
                <span class="block text-green-500">Start vandaag met ruilen.</span>
            </h2>
            <div class="mt-8 lex lg:mt-0 lg:flex-shrink-0">
                <div class="inline-flex rounded-md shadow">
                    @if (Program.IsLoggedIn)
                    {
                        <a class="inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-green-500 bg-white hover:bg-indigo-50"
                           asp-controller="Plants" asp-action="Create">
                            Stekje plaatsen
                        </a>
                    }
                    else
                    {
                        <a class="inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-green-500 bg-white hover:bg-indigo-50"
                           asp-area="Identity" asp-page="/Account/Register">
                            Gratis account aanmaken
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container mx-auto mt-6 mb-6">
    <div class="grid grid-cols-1 md:grid-cols-8 lg:grid-cols-4">
        @* Filters in frontend *@
        <div class="hidden md:block md:col-span-3 lg:col-span-1">
            <h2 class="text-3xl mb-4">Filter</h2>
            <div class="block mb-4 w-4/5">
                <span class="text-xl text-bold">Zoeken</span>
                <div class="pt-2 relative mx-auto text-gray-600">
                    <input class="border border-black bg-white h-10 px-5 pr-16 text-sm focus:outline-none w-full"
                           type="search" name="search" placeholder="Zoeken" id="search-field">
                    <button type="submit" class="absolute right-0 top-0 mt-5 mr-4" id="search-button">
                        <svg class="text-gray-600 h-4 w-4 fill-current" xmlns="http://www.w3.org/2000/svg"
                             xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Capa_1" x="0px" y="0px"
                             viewBox="0 0 56.966 56.966" style="enable-background:new 0 0 56.966 56.966;" xml:space="preserve"
                             width="512px" height="512px">
                            <path
                                d="M55.146,51.887L41.588,37.786c3.486-4.144,5.396-9.358,5.396-14.786c0-12.682-10.318-23-23-23s-23,10.318-23,23  s10.318,23,23,23c4.761,0,9.298-1.436,13.177-4.162l13.661,14.208c0.571,0.593,1.339,0.92,2.162,0.92  c0.779,0,1.518-0.297,2.079-0.837C56.255,54.982,56.293,53.08,55.146,51.887z M23.984,6c9.374,0,17,7.626,17,17s-7.626,17-17,17  s-17-7.626-17-17S14.61,6,23.984,6z"/>
                        </svg>
                    </button>
                </div>
            </div>
            <div class="block mb-4 w-4/5">
                <span class="text-xl text-bold">Afstand</span>
                <div class="pt-2 relative mx-auto text-gray-600">
                    <input class="border border-black bg-white h-10 px-5 pr-16 text-sm focus:outline-none w-full"
                           type="search" name="search" placeholder="Postcode" id="zipcode-field">
                    <button type="submit" class="absolute right-0 top-0 mt-5 mr-4" id="zipcode-button">
                        <svg class="text-gray-600 h-4 w-4 fill-current" xmlns="http://www.w3.org/2000/svg"
                             xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Capa_1" x="0px" y="0px"
                             viewBox="0 0 56.966 56.966" style="enable-background:new 0 0 56.966 56.966;" xml:space="preserve"
                             width="512px" height="512px">
                            <path
                                d="M55.146,51.887L41.588,37.786c3.486-4.144,5.396-9.358,5.396-14.786c0-12.682-10.318-23-23-23s-23,10.318-23,23  s10.318,23,23,23c4.761,0,9.298-1.436,13.177-4.162l13.661,14.208c0.571,0.593,1.339,0.92,2.162,0.92  c0.779,0,1.518-0.297,2.079-0.837C56.255,54.982,56.293,53.08,55.146,51.887z M23.984,6c9.374,0,17,7.626,17,17s-7.626,17-17,17  s-17-7.626-17-17S14.61,6,23.984,6z"/>
                        </svg>
                    </button>
                </div>
                <span class="mt-2 text-sm text-red-500" id="zipcode-field-error"></span>
                <select class="mt-2 border border-black bg-white h-10 px-5 pr-4 text-sm focus:outline-none w-full" name="distance" id="distance-select" onchange="distanceFilter(this)">
                    <option value="0">Alle afstanden...</option>
                    <option value="3">< 3 km</option>
                    <option value="5">< 5 km</option>
                    <option value="10">< 10 km</option>
                    <option value="15">< 15 km</option>
                    <option value="25">< 25 km</option>
                    <option value="50">< 50 km</option>
                    <option value="75">< 75 km</option>
                </select>
                <span class="mt-2 text-sm text-red-500" id="afstand-field-error"></span>
            </div>
            @{ List<Filter> filters = (List<Filter>) ViewData["Filters"]; }
            @foreach (Filter filter in filters)
            {
                <div class="block mb-4">
                    <span class="text-xl text-bold">@filter.Name</span>
                    <div class="mt-2">
                        @foreach (Option filterOption  in filter.Options)
                        {
                            <div>
                                <label class="inline-flex items-center w-full cursor-pointer">
                                    <input type="checkbox" class="form-checkbox filter-checkbox h-5 w-5 checked:bg-green-500 cursor-pointer" data-category="@filter.SystemId" name="@filter.SystemId-@filterOption.OptionId" value="@filterOption.OptionId">
                                    <span class="ml-2 cursor-pointer">@filterOption.DisplayName</span>
                                </label>
                            </div>
                        }
                    </div>

                </div>
            }
        </div>
        @* Plant overview *@
        <div class="col-span-1 md:col-span-5 lg:col-span-3 grid sm:grid-cols-2 lg:grid-cols-3 gap-4 h-fit relative p-5 sm:p-0" id="plantOverview">
            <div class="overlay" id="overlay">
                <div class="loader"></div>
            </div>
            <h2 class="col-span-1 text-2xl font-semibold text-green-500">@Model.Count Stekjes</h2>
            <div class="sm:text-right lg:col-span-2" id="sort-filter-div">
                <label for="sort-select" class="mr-2 text-base font-semibold text-gray-500 text-bold">Sorteren op:</label>
                <select class="border border-black bg-white h-10 px-5 pr-4 text-sm focus:outline-none" name="sort" id="sort-select" onchange="sortFilter(this)">
                    <option value="new">Nieuwste eerst</option>
                    <option value="a-z">Naam: A-Z</option>
                    <option value="z-a">Naam: Z-A</option>
                    <option value="loc">Afstand</option>
                </select>
                <span class="mt-2 text-sm text-red-500 w-full block" id="sort-filter-error"></span>
            </div>
            @{
                foreach (var plant in Model.Items)
                {
                    <div class="rounded overflow-hidden shadow-lg relative">
                        <a href="/plants/details/@plant.PlantId">
                            <img class="plant-image" src="@plant.ImgUrl" alt="@plant.Name">
                            @if (plant.Distance != 0)
                            {
                                <div class="absolute dis-label text-sm font-medium bg-green-100 py-1 px-2 rounded text-green-500 align-middle">@plant.Distance km</div>
                            }
                            <div class="px-6 py-4">
                                <div class="font-medium text-xl mb-2">@plant.Name</div>
                            </div>
                        </a>
                    </div>
                }
            }
            @if (Model.HasMultiplePages)
            {
                <div class="col-span-1 sm:col-span-2 lg:col-span-3">
                    <div class="pt-4 flex justify-center">
                        <div class="relative z-0 inline-flex shadow-sm -space-x-px" aria-label="Pagination">
                            @if (Model.HasPreviousPage)
                            {
                                <button onclick="navigateToPage(@(Model.PageIndex - 1))" class="relative inline-flex items-center px-2 py-2 hover:text-black border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                    <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                        <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd"/>
                                    </svg>
                                    Vorige
                                </button>
                            }
                            @{
                                foreach (var leftPagingNumber in Model.LeftPagingNumbers)
                                {
                                    <button onclick="navigateToPage(@leftPagingNumber)" class="relative inline-flex items-center px-4 py-2 hover:text-black border border-gray-300 text-sm font-medium @(Model.PageIndex == leftPagingNumber ? "bg-green-500 text-white" : "bg-white text-gray-700") hover:bg-gray-50">
                                        @leftPagingNumber
                                    </button>
                                }
                            }
                            @if (Model.HiddenPages && Model.LeftPagingNumbers.Last() + 1 != Model.RightPagingNumbers[0])
                            {
                                <span class="relative inline-flex items-center px-4 py-2 hover:text-black border border-gray-300 bg-white text-sm font-medium text-gray-700">
                                    ...
                                </span>
                            }
                            @{
                                foreach (var rightPagingNumber in Model.RightPagingNumbers)
                                {
                                    <button onclick="navigateToPage(@rightPagingNumber)" class="relative inline-flex items-center px-4 py-2 hover:text-black border border-gray-300 text-sm font-medium @(Model.PageIndex == rightPagingNumber ? "bg-green-500 text-white" : "bg-white text-gray-700") hover:bg-gray-50">
                                        @rightPagingNumber
                                    </button>
                                }
                            }
                            @if (Model.HasNextPage)
                            {
                                <button onclick="navigateToPage(@(Model.PageIndex + 1))" class="relative inline-flex items-center hover:text-black px-2 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                    Volgende
                                    <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                        <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
                                    </svg>
                                </button>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>